<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>DeepaMehta 4 Global</name>
    <groupId>de.deepamehta</groupId>
    <artifactId>deepamehta-global</artifactId>
    <version>4.0.13-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>

        <!-- Webserver -->
        <org.osgi.service.http.port>8080</org.osgi.service.http.port>
        <org.osgi.service.http.port.secure>4433</org.osgi.service.http.port.secure>
        <org.apache.felix.http.enable>true</org.apache.felix.http.enable>
        <org.apache.felix.https.enable>false</org.apache.felix.https.enable>
        <org.apache.felix.https.keystore.password></org.apache.felix.https.keystore.password>
        <org.apache.felix.https.keystore.key.password></org.apache.felix.https.keystore.key.password>

        <!-- Request Filter -->
        <dm4.security.read_requires_login>false</dm4.security.read_requires_login>
        <dm4.security.write_requires_login>true</dm4.security.write_requires_login>
        <dm4.security.subnet_filter>127.0.0.1/32</dm4.security.subnet_filter>

        <!-- Database -->
        <dm4.database.path>${project.basedir}/deepamehta-db</dm4.database.path>

        <!-- File Repository -->
        <dm4.filerepo.path></dm4.filerepo.path>

        <!-- Distribution Dependency Versions -->
        <felix.version>3.2.2</felix.version>
        <karaf.version>2.2.9</karaf.version>
        <pax.exam.version>2.4.0</pax.exam.version>

        <file.encoding>UTF-8</file.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>run</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <java.util.logging.config.file>
                    ${project.basedir}/modules/dm4-distribution/conf/logging.properties
                </java.util.logging.config.file>
                <felix.log.level>1</felix.log.level>
                <felix.fileinstall.dir>
                    <![CDATA[
                        ${project.basedir}/modules/dm4-api/target,
                        ${project.basedir}/modules/dm4-core/target,
                        ${project.basedir}/modules/dm4-webservice/target,
                        ${project.basedir}/modules/dm4-webclient/target,
                        ${project.basedir}/modules/dm4-webbrowser/target,
                        ${project.basedir}/modules/dm4-notes/target,
                        ${project.basedir}/modules/dm4-contacts/target,
                        ${project.basedir}/modules/dm4-workspaces/target,
                        ${project.basedir}/modules/dm4-typeeditor/target,
                        ${project.basedir}/modules/dm4-iconpicker/target,
                        ${project.basedir}/modules/dm4-typesearch/target,
                        ${project.basedir}/modules/dm4-topicmaps/target,
                        ${project.basedir}/modules/dm4-files/target,
                        ${project.basedir}/modules/dm4-filemanager/target,
                        ${project.basedir}/modules/dm4-help/target,
                        ${project.basedir}/modules/dm4-accesscontrol/target,
                        ${project.basedir}/modules/dm4-facets/target
                    ]]>
                </felix.fileinstall.dir>
                <!-- Watching only for jar files suppresses deployment of exploded bundles (which often fails).    -->
                <felix.fileinstall.filter>.*\\.jar</felix.fileinstall.filter>
                <!-- Setting "noInitialDelay" to true causes *synchronous* bundle starts in the order the watch    -->
                <!-- directories are defined! Furthermore the STARTED framework event is eventually fired. Default -->
                <!-- is noInitialDelay=false, which causes *asynchronous* bundle starts in arbitrary order.        -->
                <felix.fileinstall.noInitialDelay>false</felix.fileinstall.noInitialDelay>
                <!-- To see any File Install logging set the level to at least 4.                                  -->
                <felix.fileinstall.log.level>0</felix.fileinstall.log.level>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.ops4j</groupId>
                        <artifactId>maven-pax-plugin</artifactId>
                        <version>1.4</version>
                        <configuration>
                            <runner>1.7.4</runner>
                            <deployPoms>
                                modules/dm4-provision/3rd-party-bundles/pom.xml,
                                modules/dm4-provision/felix-bundles/pom.xml
                            </deployPoms>
                        </configuration>
                    </plugin>
                    <!-- Deletes OSGi container configuration as created by Pax Runner -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>runner</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>all</id>
            <modules>
                <module>modules/dm4-parent</module>
                <module>modules/dm4-api</module>
                <module>modules/dm4-core</module>
                <module>modules/dm4-webservice</module>
                <module>modules/dm4-workspaces</module>
                <module>modules/dm4-accesscontrol</module>
                <module>modules/dm4-facets</module>

                <module>modules/dm4-webclient</module>
                <module>modules/dm4-topicmaps</module>
                <module>modules/dm4-typeeditor</module>
                <module>modules/dm4-typesearch</module>

                <module>modules/dm4-contacts</module>
                <module>modules/dm4-files</module>
                <module>modules/dm4-filemanager</module>
                <module>modules/dm4-help</module>
                <module>modules/dm4-iconpicker</module>
                <module>modules/dm4-notes</module>
                <module>modules/dm4-webbrowser</module>

                <module>modules/dm4-provision</module>
                <module>modules/dm4-plugin-parent</module>
            </modules>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.8.1</version>
                        <configuration>
                            <show>private</show>
                            <linksource>true</linksource>
                            <links>
                                <link>http://www.deepamehta.de/apidocs/neo4j-mehtagraph/1.0/</link>
                                <link>http://jersey.java.net/nonav/apidocs/1.8/jersey/</link>
                                <link>http://jettison.codehaus.org/apidocs/</link> <!-- version 1.2 -->
                                <link>http://www.osgi.org/javadoc/r4v401/</link>
                            </links>
                            <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                            <docletArtifact>
                                <groupId>org.umlgraph</groupId>
                                <artifactId>umlgraph</artifactId>
                                <version>5.6</version>
                            </docletArtifact>
                            <additionalparam>
                                -collapsible -hide java.* -hide org.* -inferdepvis public -inferrel
                            </additionalparam>
                            <useStandardDocletOptions>true</useStandardDocletOptions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>dist</id>
            <modules>
                <module>modules/dm4-distribution</module>
                <module>modules/dm4-assemblies</module>
            </modules>
        </profile>

        <profile>
            <id>neo4j</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2</version>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <includePluginDependencies>true</includePluginDependencies>
                            <mainClass>org.neo4j.shell.StartClient</mainClass>
                            <arguments>
                                <argument>-path=${dm4.database.path}</argument>
                                <argument>-v</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-shell</artifactId>
                    <version>1.2-1.2</version>
                </dependency>
                <dependency>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-kernel</artifactId>
                    <version>1.2-1.2</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <extensions>
            <!-- Enabling the use of SCP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0</version>
            </extension>
        </extensions>
    </build>

    <distributionManagement>
        <repository>
            <id>deepamehta-public-repository</id>
            <url>scpexe://deepamehta.newthinking.net/var/lib/tomcat-6/webapps/ROOT/maven2</url>
        </repository>
    </distributionManagement>

    <scm>
        <connection>scm:git:git@github.com:jri/deepamehta.git</connection>
    </scm>

    <repositories>
        <repository>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven2-repository.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>deepamehta-public-repository</id>
            <url>http://deepamehta.newthinking.net/maven2</url>
        </repository>
    </repositories>

</project>
